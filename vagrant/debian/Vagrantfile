# -*- mode: ruby -*-
# vi: set ft=ruby :

Vagrant.configure(2) do |config|

  ###  FRONTEND  ###################################################
  config.vm.define "frontend" do |frontend|
    frontend.vm.box = "debian/jessie64"

    frontend.vm.network "forwarded_port", guest: 80, host: 5000

    frontend.vm.synced_folder ".", "/var/www/api", type: "rsync"

    frontend.vm.network "private_network", ip: "192.168.242.52"

    # Install package
    frontend.vm.provision "shell",
      inline: "sudo apt -y install mc cpanminus apache2 libapache2-mod-perl2 git
       sqlite perl-JSON perl-DBI perl-Data-Dumper perl-DBD-SQLite perl-Image-ExifTool perl-App-cpanminus perl-Exporter-Tiny perl-Class-Load perl-Test-Warn perl-Capture-Tiny perl-Sub-Uplevel perl-Moo perl-Package-Stash perl-Devel-StackTrace perl-Test-Most perl-Type-Tiny perl-HTML-Parser perl-HTML-Tagset perl-Socket6 perl-Sys-Syslog perl-libwww-perl"


    # Install unpackaged perl modules
    frontend.vm.provision "shell", inline: <<-EOF
      (echo y;echo o conf prerequisites_policy follow;echo o conf commit)|sudo cpan
      sudo cpanm install 'Geo::JSON'
      sudo cpanm install 'HTML::Entities'
      sudo cpanm install 'Net::Subnet'
    EOF


    # Create virtual host directory
    frontend.vm.provision "shell", inline: <<-EOF
      cd /
      sudo mkdir /var/www/api
      sudo chmod 770 /var/www/api
      sudo chown www-data:www-data /var/www/api
      sudo usermod -a -G www-data vagrant
      cd /var/www/
      git clone https://github.com/osmcz/api
      cd /var/www/api
      rm img
      mkdir img
    EOF

    # update apache config
    frontend.vm.provision "shell", inline: <<-EOF
      cd /var/www/api
      sudo cp vagrant/debian/api.apache /etc/apache2/sites-enabled
      sudo ln -s /etc/apache2/mods-available/perl.load /etc/apache2/mods-enabled/perl.load
      sudo service apache2 restart
    EOF

    # start apache
    frontend.vm.provision "shell", run: "always",
      inline: "service httpd start"

    frontend.vm.provision "shell", run: "always", inline: <<-EOF
      echo "####################################################[X]#"
      echo "#   Your development instance of OSMCZ API             #"
      echo "#   is now running at: http://vangard.openstreetmap.cz #"
      echo "########################################################"
    EOF
  end

end
